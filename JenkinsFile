// pipeline {
//     agent any
//     tools {
//         nodejs 'nodejs'   // Ensure this name matches your Global Tool Configuration
//     }
//     environment {
//         DEPLOY_HOOK_URL = 'https://api.render.com/deploy/srv-cronan56l47c73fqc4gg?key=ZXodTKEAAbo' 
//         SLACK_WEBHOOK_URL = 'https://hooks.slack.com/services/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'
//         BUILD_URL = "${env.BUILD_URL}"
//         RENDER_URL = "https://gallery-wg33.onrender.com"       
//     }

//     stages {
//         stage('Node Version') {
//             steps {
//                 echo 'Checking Node.js version...'
//                 sh 'node --version'
//             }
//         }
//         stage('Clone repo') {
//             steps {
//                 echo 'Cloning the repository...'
//                 git credentialsId: 'gitcredentials', url: 'https://github.com/emmanuelterah/gallery'
//             }
//         }
//         stage('Install Npm') {
//             steps {
//                 echo 'Installing npm packages...'
//                 sh 'npm install'
//                 sh 'npm install mongodb'
//                 sh 'npm install -g webpack'
//             }
//         }
//         stage('Build') {
//             steps {
//                 echo 'Running the build...'
//                 sh 'npm run build'
//             }
//         }
//         stage('Test') {
//             steps {
//                 echo 'Running tests...'
//                 sh 'npm test'
//             }
//         }
//         stage('Deploy to Render122') {
//             steps {
//                 script {
//                     def response = sh(script: """
//                         curl -X POST ${DEPLOY_HOOK_URL}
//                     """, returnStdout: true).trim()
                    
//                     echo "Deployment Response: ${response}"
//                 }
//             }
//         }
//     }

//     post {
//         always {
//             echo 'Pipeline completed.'
//         }
//         failure {
//             echo 'Pipeline failed.'
//         }
//     }
// }

// // https://api.render.com/deploy/srv-cronan56l47c73fqc4gg?key=ZXodTKEAAbo



pipeline {
    agent any
    tools {
        nodejs 'nodejs'  // Ensure this name matches your Global Tool Configuration
    }
    environment {
        DEPLOY_HOOK_URL = 'https://api.render.com/deploy/srv-cronan56l47c73fqc4gg?key=ZXodTKEAAbo' 
        SLACK_WEBHOOK_URL = 'https://hooks.slack.com/services/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'
        BUILD_URL = "${env.BUILD_URL}"
        RENDER_URL = "https://gallery-wg33.onrender.com" 
        SLACK_CHANNEL="#emmanuel_ip1"
        
    }

    stages {
        stage('Node Version') {
            steps {
                echo 'Checking Node.js version...'
                sh 'node --version'
            }
        }
        stage('Clone repo') {
            steps {
                echo 'Cloning the repository...'
                git credentialsId: 'gitcredentials', url: 'https://github.com/emmanuelterah/gallery'
            }
        }
        stage('Install Npm') {
            steps {
                echo 'Installing npm packages...'
                sh 'npm install'
                sh 'npm install mongodb'
                sh 'npm install -g webpack'
            }
        }
        stage('Build') {
            steps {
                echo 'Running the build...'
                sh 'npm run build'
            }
        }
        stage('Test') {
            steps {
                echo 'Running tests...'
                sh 'npm test'
            }
        }
        stage('Deploy to Render') {
            steps {
                script {
                    def response = sh(script: """
                        curl -X POST ${DEPLOY_HOOK_URL}
                    """, returnStdout: true).trim()
                    
                    echo "Deployment Response: ${response}"
                }
            }
        }
    }

    post {
        success {
            script {
                    echo 'Pipeline successful. Sending Slack notification...'
                    sh """
                    curl -X POST -H 'Content-Type: application/json' \
                    --data '{
                        "channel": "${SLACK_CHANNEL}",
                        "text": "Successful deploy of ${env.JOB_NAME} #${env.BUILD_NUMBER}. View the site at ${RENDER_URL}. Build details: ${BUILD_URL}"
                    }' ${SLACK_WEBHOOK_URL}
                    """
                }
            }
        }